/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// OpenStackClusterIdentitySpecApplyConfiguration represents a declarative configuration of the OpenStackClusterIdentitySpec type for use
// with apply.
type OpenStackClusterIdentitySpecApplyConfiguration struct {
	SecretRef         *OpenStackCredentialSecretReferenceApplyConfiguration `json:"secretRef,omitempty"`
	NamespaceSelector *v1.LabelSelectorApplyConfiguration                   `json:"namespaceSelector,omitempty"`
}

// OpenStackClusterIdentitySpecApplyConfiguration constructs a declarative configuration of the OpenStackClusterIdentitySpec type for use with
// apply.
func OpenStackClusterIdentitySpec() *OpenStackClusterIdentitySpecApplyConfiguration {
	return &OpenStackClusterIdentitySpecApplyConfiguration{}
}

// WithSecretRef sets the SecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretRef field is set to the value of the last call.
func (b *OpenStackClusterIdentitySpecApplyConfiguration) WithSecretRef(value *OpenStackCredentialSecretReferenceApplyConfiguration) *OpenStackClusterIdentitySpecApplyConfiguration {
	b.SecretRef = value
	return b
}

// WithNamespaceSelector sets the NamespaceSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NamespaceSelector field is set to the value of the last call.
func (b *OpenStackClusterIdentitySpecApplyConfiguration) WithNamespaceSelector(value *v1.LabelSelectorApplyConfiguration) *OpenStackClusterIdentitySpecApplyConfiguration {
	b.NamespaceSelector = value
	return b
}
